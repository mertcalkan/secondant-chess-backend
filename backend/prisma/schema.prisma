generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Game {
  id          Int       @id @default(autoincrement())
  white       String
  black       String
  result      String
  resultReason ResultReason
  pgn         String
  createdAt   DateTime  @default(now())
  gameDate    DateTime
  gameSource  GameSource 
  gameVariant GameVariant @default(Standard)
  fromPosition String // FEN string or Chess960 ID.
  openingName String?
  ecoCode     String
  variation   String
  playedOnDGT Boolean
  organization String?
  year        Int?
  city        String?
  country     String?
  timeControl String?

}
model Position {
  id              Int    @id @default(autoincrement())
  fen             String
  fromGame        Boolean
  gameReferences  Json @default("[]") // Stores multiple game IDs as JSON array
  whitePieceCoordinates     Json
  blackPieceCoordinates     Json
  whitePieces Json
  blackPieces Json
  materialAdvantage Json
  moveTurn       String 
  isCheck        Boolean @default(false)
  isDoubleCheck  Boolean @default(false)
  isDiscoveredCheck Boolean @default(false)
  isMate         Boolean @default(false)
  isStaleMate    Boolean @default(false) 
  createdAt      DateTime @default(now())
  whiteAccuracy  Float?
  blackAccuracy  Float?
  whiteAverageCentipawnLoss Float?
  blackAverageCentipawnLoss Float?
  fromEcoCode    Json
  fromOpening    Json
  fromVariation  Json
  positionPhase  PositionPhase
  positionEvaluation PositionEvaluation
}

model Puzzle {
  id            Int    @id @default(autoincrement())
  puzzleType    PuzzleType @default(Standard) 
  puzzleLevel   String
  puzzleTheme   String[]
  puzzleLength  String 
  puzzlePhase   PositionPhase[]
  fromEcoCode   String?
  fromOpening   String?
  fromVariation String?
  goal          String // attack, defense, mate
  gameId        Json  
  createdAt     DateTime @default(now())
}

enum GameType {
  OTB
  ONLINE
}

enum GameVariant {
  Standard
  Chess960
}

enum PositionPhase {
  Opening
  Middlegame
  Endgame
}

enum PuzzleType {
  Standard
  Etude
  Composition
}

enum ResultReason {
  FiftyMoveRule
  ThreefoldRepetition
  Resignation
  AgreeingOnDraw
  Stalemate
  InsufficientMaterial
  Checkmate
}

enum GameSource {
  Lichess
  ChessCom
  OTB
}

enum PositionEvaluation {
  NotEval
  WhiteHugeAdvantage
  WhiteMuchBetter
  WhiteBetter
  WhiteSlightlyBetter
  Equal
  BlackSlightlyBetter
  BlackBetter
  BlackMuchBetter
  BlackHugeAdvantage
  WhiteMatesInN
  BlackMatesInN
}